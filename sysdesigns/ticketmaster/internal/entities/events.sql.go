// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: events.sql

package entities

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const createEvent = `-- name: CreateEvent :one
INSERT INTO events (name, description, added_by, venue_id, event_date)
VALUES ($1, $2, $3, $4, $5)
RETURNING id, name, description, added_by, venue_id, event_date, created_at
`

type CreateEventParams struct {
	Name        string           `json:"name"`
	Description string           `json:"description"`
	AddedBy *uuid.UUID        `json:"added_by"`
	VenueID     uuid.UUID        `json:"venue_id"`
	EventDate   pgtype.Timestamp `json:"event_date"`
}

func (q *Queries) CreateEvent(ctx context.Context, arg CreateEventParams) (Event, error) {
	row := q.db.QueryRow(ctx, createEvent,
		arg.Name,
		arg.Description,
		arg.AddedBy,
		arg.VenueID,
		arg.EventDate,
	)
	var i Event
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Description,
		&i.AddedBy,
		&i.VenueID,
		&i.EventDate,
		&i.CreatedAt,
	)
	return i, err
}
